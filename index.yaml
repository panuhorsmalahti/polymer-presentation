title: The Polymer Way
author:
  name: Panu Horsmalahti
  twitter: nawitus
  email: panu.horsmalahti@iki.fi
  url: http://github.com/panuhorsmalahti
output: index.html
theme: sudodoki/reveal-cleaver-theme

------------------------------------------------------------------------

# Panu Horsmalahti

&nbsp;

#### @nawitus
#### panu.horsmalahti@iki.fi

&nbsp;

> "Software developer at Cybercom"

------------------------------------------------------------------------

# Polymer

<img src="logo.png" style="width: 400px"></img>

------------------------------------------------------------------------

### What is Polymer?

* The Polymer library is designed to make it easier and faster for developers to create great, reusable components for the modern web.

* Utilizes web compoents for building elements and eventually applications.

```
<my-tabstrip>
	<my-tab> Home 		</my-tab>
	<my-tab> Services 	</my-tab>
	<my-tab> Contact Us   </my-tab>
<my-tabstrip>
```

------------------------------------------------------------------------

### Web components, polymer.. huh?

<img src="web-poly-stack.svg" style="width: 500px"></img>

------------------------------------------------------------------------

### So it's a framework, right?

* With Polymer the framework is DOM.
	* The component model is Custom Elements.
	* Scoping provided by Shadow DOM.
* Web components are really low-level by design.
* Polymer is a sugaring layer to build your own element sets and applications with.

------------------------------------------------------------------------

### Philosophy

* Everything is a component.
	* Build big things from small things, compose.
	* Separation of concerns is the key to scalable applications.

* Everything is an element.
	* Custom elements are the components of Polymer.
	* Elements are used everywhere.
	* UI Elements, APIs (example: [iron-localstorage](https://elements.polymer-project.org/elements/iron-localstorage))

* Less code.
	* Dont' repeat.
	* Only write code that's unique to your app and / or element.
	* Data-binding (reduces code).

------------------------------------------------------------------------

What ever, dude.. Show me some code!

------------------------------------------------------------------------

Declaring your custom element:

```
<link rel="import" href="lib/polymer/polymer.html">

<script>
  	// register a new element called foo-bar
  	Polymer({
		is: "foo-bar",
		// add a callback to the element's prototype
		ready: function() {
			this.textContent = "What ever, dude.. Show me some code!"
		}
  	});
</script>
```

------------------------------------------------------------------------

Using your custom element:

```
<!DOCTYPE html>
<html>
	<head>
		<script src="lib/webcomp/webcomponents-lite.min.js"></script>
		<link rel="import" href="foo-bar.html">
	</head>
	<body>
		<foo-bar></foo-bar>
	</body>
</html>
```

------------------------------------------------------------------------


